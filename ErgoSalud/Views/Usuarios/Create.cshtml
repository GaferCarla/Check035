@model ErgoSalud.Models.ERGOS_Usuarios_N01
<script>
    $(window).load(function () {
        $('#ddw_Centros_T').empty();
        $("#ddw_Centros_T").prop("disabled", true);

    });

    function getting_centros_trabajo() {
        var id_empresa = $('#ddw_Empresas option:selected').val();
     //   alert(id_categoria);
        $.ajax({
            type: 'POST',
            url: '@Url.Action("Get_Centros_Trabajo","Encuestas")',
            dataType: 'json',
            data: { id_empresa: id_empresa },
            success: function (data) {
                $("#ddw_Centros_T").prop("disabled", false);
                if (data != null) {
                    $('#ddw_Centros_T').empty();
                    $('#ddw_Departamentos').empty();
                    var mySelect = $('#ddw_Centros_T');
                        mySelect.append($('<option>', {
                        value: "",
                            text: "Seleccione Centro de Trabajo"
                    }));
                    $.each(data, function (i, data) {
                        mySelect.append($('<option>', {
                            value: data.id_centro_trabajo,
                            text: data.Nombre_centro_trabajo
                        }));
                    });
                } else {
                    $('#ddw_Centros_T').empty();
                    $('#ddw_Departamentos').empty();
                }
            },
            error: function () {
                alert("Seleccione la Empresa");
                $('#ddw_Centros_T').empty();
                $('#ddw_Departamentos').empty();
            },
            catch(e) {
                alert(e.name + "\n" + e.message)
            }
        });
    }





</script>
@{
    ViewBag.Title = "Create";
}
<br>
<h2>Creación de Usuario</h2>
@if (TempData["Usuario_Existente"] != null)
{
    <h2>
        <b style="color:red"> @TempData["Usuario_Existente"]</b>
    </h2>
}
<div class="card">
    <div class="body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.Label("Nombre de Usuario", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.User_Nombre, new { htmlAttributes = new { @class = "form-control form-line", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.User_Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Contraseña", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.PasswordFor(model => model.User_Password, new { @class = "form-control form-line", autocomplete = "off" })
                        @Html.ValidationMessageFor(model => model.User_Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Rol Asignado", "Rol Asignado", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.id_rol, (SelectList)ViewBag.id_rol, "Seleccionar Rol Usuario", new { @class = "form-control form-line" })
                        @Html.ValidationMessageFor(model => model.id_rol, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Empresa", "Empresa", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.id_empresa, (SelectList)ViewBag.id_empresa, "Seleccionar Empresa", new { id = "ddw_Empresas", onchange = "getting_centros_trabajo()", @class = "form-control form-line", @required = "required" })
                        @Html.ValidationMessageFor(model => model.id_empresa, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Centro de Trabajo", "Centro de Trabajo", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.id_centro_trabajo, (SelectList)ViewBag.id_centro_trabajo, "Seleccionar Centro de Trabajo", new { id = "ddw_Centros_T", @class = "form-control form-line", @required = "required" })
                        @Html.ValidationMessageFor(model => model.id_empresa, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Email", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control form-line" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Crear" class="btn btn-success" />
                        @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-primary" })
                    </div>
                </div>
            </div>
        }
    </div>
</div>
